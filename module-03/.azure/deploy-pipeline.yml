trigger: none

pool:
  vmImage: 'ubuntu-latest'

parameters:
- name: azureServiceConnection
  type: string
- name: subscriptionId
  type: string
- name: location
  type: string

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  bicepFile: 'module-03/bicep/main.bicep'

stages:
- stage: DeployDev
  displayName: 'Deploy Module 03 Development Resources'
  jobs:
  - deployment: DeployModule03Dev
    displayName: Deploy Module 03 Development
    pool:
      vmImage: 'ubuntu-latest'
    variables: 
      resourceGroupName: 'module-03-dev-rg'
      deployEnvironmentName: 'module-03-dev'
    environment:
      name: ${{ variables.deployEnvironmentName }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              fetchDepth: 0
            - task: AzureCLI@2
              displayName: 'Create Resource Group'
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  # Creating a resource group
                  echo "Creating resource group ${{ variables.resourceGroupName }} in location ${{ parameters.location }}"
                  az group create --name ${{ variables.resourceGroupName }} --location ${{ parameters.location }}
            - task: AzureCLI@2
              displayName: 'Run What-If Analysis'
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  # Run What-If deployment
                  echo "Running What-If deployment for ${{ variables.bicepFile }} in resource group ${{ variables.resourceGroupName }}"
                  az deployment group what-if --resource-group ${{ variables.resourceGroupName }} --template-file ${{ variables.bicepFile }}
            - task: AzureCLI@2
              displayName: 'Deploy Bicep'
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  # Deploying Bicep file
                  echo "Deploying Bicep file ${{ variables.bicepFile }} to resource group ${{ variables.resourceGroupName }}"
                  az deployment group create --name ${{ variables.resourceGroupName }} --resource-group ${{ variables.resourceGroupName }} --template-file ${{ variables.bicepFile }}
            - task: AzureCLI@2
              name: setvarStep
              displayName: Set Pipeline Variables
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  # Thanks to Randi Ratnayake for the code snippet: 
                  # https://rkeytech.io/blogs/2022/08/set-bicep-outputs-variables-as-ado-pipeline-variables/
                  deploymentOutputs=$(az deployment group show \
                  --resource-group $(resourceGroupName) \
                  --name $(resourceGroupName) \
                  --query properties.outputs | jq -c 'to_entries[] | [.key, .value.value]')
                  echo "$deploymentOutputs" | while IFS=$'\n' read -r c; do
                    outputname=$(echo "$c" | jq -r '.[0]')
                    outputvalue=$(echo "$c" | jq -r '.[1]')
                    echo "##vso[task.setvariable variable=$outputname;;isOutput=true]$outputvalue"
                  done
  - job: DeployModule03DevApp
    displayName: 'Deploy Module 03 Development App'
    dependsOn: DeployModule03Dev
    variables:
      webAppName: $[ dependencies.DeployModule03Dev.outputs['setvarStep.webAppName'] ]  
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        azureSubscription: ${{ parameters.azureServiceConnection }}
        command: 'publish'
        publishWebProjects: true
        workingFolder: '$(System.DefaultWorkingDirectory)/module-03/webapp'
    - task: AzureWebApp@1
      inputs:
        azureSubscription: ${{ parameters.azureServiceConnection }}
        appType: 'webApp'
        appName: '${{ variables.webAppName }}'
        package: '$(System.DefaultWorkingDirectory)/**/*.zip'
        deploymentMethod: 'auto' 
- stage: DeployProd
  displayName: 'Deploy Module 03 Production Resources'
  dependsOn: DeployDev
  condition: succeeded()
  #condition: and(succeeded(), eq(variables.isMain, true))
  jobs:
  - deployment: DeployModule03Prod
    displayName: Deploy Module 03 Production
    pool:
      vmImage: 'ubuntu-latest'
    variables: 
      resourceGroupName: 'module-03-prod-rg'
      deployEnvironmentName: 'module-03-prod'
    environment:
      name: ${{ variables.deployEnvironmentName }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              fetchDepth: 0
            - task: AzureCLI@2
              displayName: 'Create Resource Group'
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  # Creating a resource group
                  echo "Creating resource group ${{ variables.resourceGroupName }} in location ${{ parameters.location }}"
                  az group create --name ${{ variables.resourceGroupName }} --location ${{ parameters.location }}
            - task: AzureCLI@2
              displayName: 'Run What-If Analysis'
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  # Run What-If deployment
                  echo "Running What-If deployment for ${{ variables.bicepFile }} in resource group ${{ variables.resourceGroupName }}"
                  az deployment group what-if --resource-group ${{ variables.resourceGroupName }} --template-file ${{ variables.bicepFile }}
            - task: AzureCLI@2
              displayName: 'Deploy Bicep'
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  # Deploying Bicep file
                  echo "Deploying Bicep file ${{ variables.bicepFile }} to resource group ${{ variables.resourceGroupName }}"
                  az deployment group create --name ${{ variables.resourceGroupName }} --resource-group ${{ variables.resourceGroupName }} --template-file ${{ variables.bicepFile }}